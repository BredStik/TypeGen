<?xml version="1.0"?>
<package>
  <metadata>
    <id>TypeGen</id>
    <version>4.1.0</version>
    <authors>Jacek Burzynski</authors>
    <owners>Jacek Burzynski</owners>
    <license type="file">LICENSE</license>
    <projectUrl>http://jburzynski.net/TypeGen</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/jburzynski/type-gen/master/docs/icon.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>TypeGen is a single-class-per-file C# to TypeScript generator</description>
    <releaseNotes>
- added support for generating from C# structs #154
- fixed nullable detection of string? when CsNullableTranslation enabled #152
- added default values for constants only option #150
- fixed JSON serialization of complex default values #149
- added new exception with initial type name #148
- fixed null exception when no property getter #147
- fixed types defined in custom type mappings being generated as type dependencies #134
	</releaseNotes>
    <tags>code-generator generator code typescript ts csharp cs</tags>
    <dependencies>
      <group targetFramework=".NETStandard2.0" />
      <group targetFramework="net7.0" />
      <group>
        <dependency id="System.Reflection.TypeExtensions" version="4.7.0" />
        <dependency id="System.Dynamic.Runtime" version="4.3.0" />
        <dependency id="Namotion.Reflection" version="2.1.1" />
        <dependency id="Newtonsoft.Json" version="13.0.2" />
      </group>
    </dependencies>
  </metadata>
</package>
